!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("rxjs"),require("@angular/common/http"),require("rxjs/operators"),require("@angular/platform-browser"),require("@angular/router"),require("@angular/forms")):"function"==typeof define&&define.amd?define("ng-table",["exports","@angular/core","rxjs","@angular/common/http","rxjs/operators","@angular/platform-browser","@angular/router","@angular/forms"],n):n((t=t||self)["ng-table"]={},t.ng.core,t.rxjs,t.ng.common.http,t.rxjs.operators,t.ng.platformBrowser,t.ng.router,t.ng.forms)}(this,(function(t,n,e,r,o,a,i,s){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var l=function(){return(l=Object.assign||function(t){for(var n,e=1,r=arguments.length;e<r;e++)for(var o in n=arguments[e])Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o]);return t}).apply(this,arguments)};var p=function(){function t(){}return t.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}(),c=function(){function t(t){this.templateRef=t}return t.decorators=[{type:n.Directive,args:[{selector:"[tableColumn]"}]}],t.ctorParameters=function(){return[{type:n.TemplateRef}]},t.propDecorators={for:[{type:n.Input}]},t}();var g=function(){function t(t){this.templateRef=t}return t.decorators=[{type:n.Directive,args:[{selector:"[tableActionButton]"}]}],t.ctorParameters=function(){return[{type:n.TemplateRef}]},t}();var u=function(){function t(t){this.templateRef=t}return t.decorators=[{type:n.Directive,args:[{selector:"[tableRowTotal]"}]}],t.ctorParameters=function(){return[{type:n.TemplateRef}]},t}();var d=function(){function t(t){this.templateRef=t}return t.decorators=[{type:n.Directive,args:[{selector:"[tableFooter]"}]}],t.ctorParameters=function(){return[{type:n.TemplateRef}]},t}();var h=function(){function t(t){this.templateRef=t}return t.decorators=[{type:n.Directive,args:[{selector:"[tableHeaderControl]"}]}],t.ctorParameters=function(){return[{type:n.TemplateRef}]},t}();var m=function(){function t(t){this.templateRef=t}return t.decorators=[{type:n.Directive,args:[{selector:"[tableHeader]"}]}],t.ctorParameters=function(){return[{type:n.TemplateRef}]},t}();var f=function(){function t(t){this.templateRef=t}return t.decorators=[{type:n.Directive,args:[{selector:"[tableRowExpand]"}]}],t.ctorParameters=function(){return[{type:n.TemplateRef}]},t}();var b=function(t){for(var n in this.align="text-left",this.columns=[],this.pagination=!0,this.sortable=!0,this.showLoading=!0,Object.assign(this,t),this.actionButtons=new y(this.actionButtons),this.rows=new x(this.rows),this.columns)this.columns[n]&&(this.columns[n]=new w(this.columns[n]))};var w=function(t){this.type="text",this.dateTimeFormat="short",this.sortable=!0,this.triggerExpandIcon="arrow",this.pinned=!1,this.align="text-left",this.triggerCloseExpanded=!0,this.colSpan=1,this.rowSpan=1,Object.assign(this,t),this.pinned&&!this.width&&(this.width="180px")};var x=function(t){this.align="text-left",this.triggerExpand=!1,this.triggerCloseExpanded=!0,Object.assign(this,t)};var y=function(t){this.title="Actions",this.align="text-left",Object.assign(this,t)};var v=function(t){this.align="text-left",this.unAuthorizedMessage="You may ask your Manager to update the settings",Object.assign(this,t)};var S=function(){this.pageIndex=0,this.pageNumber=1,this.pageSize=10};var C=function(){};var T={Desc:-1,Asc:1,None:0};T[T.Desc]="Desc",T[T.Asc]="Asc",T[T.None]="None";var E=function(){};var O=function(){function t(t,r,o){this._appRef=t,this._httpClient=r,this._cdr=o,this.colTemplates={},this.columnTriggerExpand$=new e.Subject,this.dataPropName="data",this.method="get",this.pagingOptionChange=new n.EventEmitter,this.sortStateChange=new n.EventEmitter,this.pagingOptions=new S,this.props=new C,this.filterModel={},this.sortState=new E,this._unsubscribe$=new e.Subject}return Object.defineProperty(t.prototype,"setColumnTemplates",{set:function(t){var n=this;t&&0!==t.length?t.forEach((function(t){n.colTemplates[t.for]=t})):this.colTemplates={}},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.initSettings(),this.registerObserver()},t.prototype.ngOnChanges=function(t){t.dataSource&&t.dataSource.currentValue&&this._cdr.detectChanges()},t.prototype.registerObserver=function(){var t=this;this.filterModel$&&this.filterModel$.pipe(o.takeUntil(this._unsubscribe$)).subscribe((function(n){t.filterModel=n,t.shouldFetchData()&&t.fetchData()})),this.sortState$&&this.sortState$.pipe(o.takeUntil(this._unsubscribe$)).subscribe((function(n){t.sortState=n,t.shouldFetchData()&&t.fetchData()}))},t.prototype.shouldFetchData=function(){return this.url},t.prototype.fetchData=function(){var t=this,n=l({},this.filterModel,this.pagingOptions,this.sortState);this.isLoading=!0,this._httpClient.get(this.url,{params:n}).subscribe((function(n){t.dataSource=n[t.dataPropName],t.isLoading=!1}))},t.prototype.initSettings=function(){this.settings=new b(this.settings),this.initInternalProps(),this.validateInitConfiguration(),console.log(this.dataSource)},t.prototype.initInternalProps=function(){this.props.isHaveHeader=this.settings&&this.settings.header,this.props.sortable=this.settings&&this.settings.sortable,this.props.isHaveActionButtons=this.settings&&this.settings.actionButtons&&this.settings.actionButtons.buttons&&this.settings.actionButtons.buttons.length>0,this.props.tableColSpan=this.settings.columns.length+1,this.props.haveRowTotal=!!this.rowTotalTemplate},t.prototype.validateInitConfiguration=function(){this.filterModel$&&this.dataSource&&console.warn("Consider to remove filterModel (un-usage) while using dataSource"),this.sortState&&this.dataSource&&console.warn("Consider to remove sortState (un-usage) while using dataSource")},t.prototype.handleOrderStateChange=function(t){this.sortState=t,this.sortStateChange.emit(t),this.shouldFetchData()&&this.fetchData()},t.prototype.onPagingOptionChange=function(t){this.pagingOptions=t,this.pagingOptionChange.emit(t),this.shouldFetchData()&&this.fetchData()},t.prototype.resetOrderState=function(){this.sortState=new E},t.prototype.resetPagingOption=function(){this.pagingOptions=new S},t.prototype.handleColumnTriggerExpand=function(t){this.columnTriggerExpand$.next(t)},t.prototype.ngOnDestroy=function(){this._unsubscribe$.next(),this._unsubscribe$.complete()},t.decorators=[{type:n.Component,args:[{selector:"ng-table",template:'\x3c!-- <ng-table-column [settings]="settings"></ng-table-column> --\x3e\r\n\r\n<div class="ng-table-container">\r\n    <div *ngIf="isLoading" class="table-loading">\r\n        <div class="loading-spinner">\r\n            <i>Refresh icon go here</i>\r\n        </div>\r\n    </div>\r\n    <div class="main-container" [ngClass]="{\'loading\': isLoading}">\r\n        \x3c!-- injected template  --\x3e\r\n        <ng-table-header *ngIf="props.isHaveHeader" [headerControlTemplate]="headerControlTemplate" [headerTemplate]="headerTemplate" [settings]="settings"></ng-table-header>\r\n        <ng-table-column (onTriggerExpand)="handleColumnTriggerExpand($event)" #tbColumn></ng-table-column>\r\n        \x3c!-- table header --\x3e\r\n        <ng-action-button [actionButtonSettings]="settings.actionButtons" #tbActionButtons [actBtnTemplate]="actBtnTemplate"></ng-action-button>\r\n        <ng-table-content \r\n            [columnTriggerExpand$] = "columnTriggerExpand$"\r\n            [settings]="settings" [sortState]="sortState" [props]="props" [dataSource]="dataSource" [colTemplates]="colTemplates"\r\n            [tbColumn]="tbColumn" [tbActions]="tbActionButtons" [rowTotalTemplate]="rowTotalTemplate" [isLoading]="isLoading"\r\n            (changeOrderState)="handleOrderStateChange($event)" [rowExpandTemplate]="rowExpandTemplate"\r\n            > \r\n        </ng-table-content>\r\n        \x3c!-- table footeer --\x3e\r\n        <div class="table-footer" *ngIf="footerTemplate && footerTemplate.templateRef">\r\n            <ng-container *ngTemplateOutlet="footerTemplate.templateRef"></ng-container>\r\n        </div>\r\n        <ng-table-navigation *ngIf="settings.pagination" [totalCount]="totalCount" (change)="onPagingOptionChange($event)"></ng-table-navigation>\r\n    </div>\r\n\r\n  \r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n',styles:[":host ::ng-deep .flex{display:flex!important}:host ::ng-deep .flex-fill{flex:1 1 auto!important}:host ::ng-deep table{text-align:left;border-radius:2px 2px 0 0;border-collapse:separate;border-spacing:0;width:100%}:host ::ng-deep table td,:host ::ng-deep table th{padding:16px;text-shadow:1px 1px 1px #fff;white-space:nowrap;border-collapse:separate;position:relative;overflow-wrap:break-word;border-bottom:1px solid #f0f0f0}:host ::ng-deep .text-right{text-align:right}:host ::ng-deep .text-center{text-align:center}:host ::ng-deep .text-left{text-align:left}:host ::ng-deep .disabled{color:#fff;background-color:grey}.ng-table-container{position:relative}.ng-table-container .table-loading{position:absolute;background:grey;z-index:1;top:50%;left:50%}.ng-table-container .main-container.loading{opacity:.7}"]}]}],t.ctorParameters=function(){return[{type:n.ApplicationRef},{type:r.HttpClient},{type:n.ChangeDetectorRef}]},t.propDecorators={actBtnTemplate:[{type:n.ContentChild,args:[g,{static:!1}]}],headerControlTemplate:[{type:n.ContentChild,args:[h,{static:!0}]}],headerTemplate:[{type:n.ContentChild,args:[m,{static:!0}]}],footerTemplate:[{type:n.ContentChild,args:[d,{static:!1}]}],rowTotalTemplate:[{type:n.ContentChild,args:[u,{static:!1}]}],rowExpandTemplate:[{type:n.ContentChild,args:[f,{static:!1}]}],setColumnTemplates:[{type:n.ContentChildren,args:[c]}],tbodyElement:[{type:n.ViewChild,args:["tbodyElement",{static:!0}]}],settings:[{type:n.Input}],totalCount:[{type:n.Input}],dataSource:[{type:n.Input}],url:[{type:n.Input}],isLoading:[{type:n.Input}],filterModel$:[{type:n.Input}],dataPropName:[{type:n.Input}],method:[{type:n.Input}],sortState$:[{type:n.Input}],pagingOptionChange:[{type:n.Output}],sortStateChange:[{type:n.Output}]},t}();var D=function(){function t(){}return t.prototype.ngOnInit=function(){},t.prototype.actionBtnOnClick=function(t,n){t.disableOn&&t.disableOn(n)||!t.actionLink&&t.action&&t.action(n)},t.decorators=[{type:n.Component,args:[{selector:"ng-action-button",template:'<ng-template #_actionButtonTemplate="" let-buttons="buttons" let-rowData="">\r\n  <ng-container\r\n    *ngTemplateOutlet="\r\n      actBtnTemplate\r\n        ? actBtnTemplate.templateRef\r\n        : _defaultActionButtonTemplate;\r\n      context: {\r\n        $implicit: rowData,\r\n        buttons: buttons\r\n      }\r\n    "\r\n  ></ng-container>\r\n</ng-template>\r\n<ng-template\r\n  #_defaultActionButtonTemplate=""\r\n  let-buttons="buttons"\r\n  let-rowData=""\r\n>\r\n  <td class="{{ actionButtonSettings.align }} {{ actionButtonSettings.css }}">\r\n    <div class="btn-group">\r\n      <ng-container *ngFor="let button of buttons">\r\n        <a\r\n          [ngClass]="button.disableOn && button.disableOn(rowData) ? \'disabled\' : \'\'"\r\n          class="btn btn-icon {{ button.align }} {{ button.css }}"\r\n          [routerLink]="button.actionLinkFunc ? button.actionLinkFunc(rowData) : button.actionLink ? button.actionLink : null"\r\n          (click)="!button.actionLink && button.action && button.action(rowData)"\r\n          ><span class="{{ button.icon }}">{{ button.title }}</span></a\r\n        ></ng-container\r\n      >\r\n    </div>\r\n  </td>\r\n</ng-template>\r\n',styles:[".btn-group{display:flex;justify-content:space-between}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={actBtnTemplate:[{type:n.Input}],actionButtonSettings:[{type:n.Input}],actionButtonTemplate:[{type:n.ViewChild,args:["_actionButtonTemplate",{static:!0}]}]},t}();var I=function(){function t(){}return t.prototype.ngOnInit=function(){console.log(this.headerControlTemplate)},t.prototype.ngAfterViewInit=function(){console.log(this.headerControlTemplate)},t.decorators=[{type:n.Component,args:[{selector:"ng-table-header",template:'<ng-template #_headerTemplate>\r\n  <h3>\r\n    <ng-container\r\n      *ngTemplateOutlet="\r\n        headerTemplate ? headerTemplate.templateRef : _defaultHeaderTemplate;\r\n      "\r\n    >\r\n    </ng-container>\r\n  </h3>\r\n</ng-template>\r\n\r\n<ng-template #_headerControlTemplate>\r\n  <div class="group-control" *ngIf="headerControlTemplate">\r\n    <ng-container\r\n      *ngTemplateOutlet="headerControlTemplate.templateRef"\r\n    ></ng-container>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #_defaultHeaderTemplate>\r\n  <span>header icon</span>\r\n  <span>title</span>\r\n</ng-template>\r\n\r\n<ng-container>\r\n  <div class="table-header">\r\n    <ng-container *ngTemplateOutlet="_headerTemplate"></ng-container>\r\n    <ng-container *ngTemplateOutlet="_headerControlTemplate"></ng-container>\r\n  </div>\r\n</ng-container>\r\n',styles:[":host ::ng-deep .table-header{margin-bottom:16px;display:flex;align-items:center;justify-content:space-between}:host ::ng-deep .table-header .group-control{display:flex;align-items:center}:host ::ng-deep .table-header .group-control>:not(:last-child){margin-right:8px}:host ::ng-deep .table-header .group-control button{padding:8px 12px}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={headerControlTemplate:[{type:n.Input}],headerTemplate:[{type:n.Input}],settings:[{type:n.Input}]},t}();var R=function(){function t(){this.onTriggerExpand=new n.EventEmitter}return t.prototype.triggerExpand=function(t,n){this.onTriggerExpand.emit({tRowEl:this._getTRowElement(t),rowData:n})},t.prototype._getTRowElement=function(t){return t.parentElement},t.decorators=[{type:n.Component,args:[{selector:"ng-table-column",template:'<ng-template\r\n  #_columnTemplate\r\n  let-colData=""\r\n  let-rowData="rowData"\r\n  let-colSetting="colSetting"\r\n  let-colTemplate="colTemplate"\r\n>\r\n  <ng-container #tRow\r\n    *ngTemplateOutlet="\r\n      colTemplate ? _customColumnTemplate : _defaultColumnTemplate;\r\n      context: {\r\n        $implicit: colData,\r\n        rowData: rowData,\r\n        colSetting: colSetting,\r\n        colTemplate: colTemplate\r\n      }\r\n    "\r\n  ></ng-container>\r\n</ng-template>\r\n<ng-template\r\n  #_customColumnTemplate\r\n  let-colData=""\r\n  let-colSetting="colSetting"\r\n  let-rowData="rowData"\r\n  let-colTemplate="colTemplate"\r\n>\r\n  <td #td\r\n  \r\n    [attr.width]="colSetting.width"\r\n    [style.left.px]="colSetting.left"\r\n    [ngClass]="{\'pinned-column\': colSetting.pinned}"\r\n    class="{{ colSetting.css }}">\r\n    <i class="expand-control mdi mdi-menu-right text-big"></i>\r\n    <div class="{{ colSetting.align }}">\r\n     \x3c!-- hello {{colSetting.marginLeft}} --\x3e\r\n      <ng-container\r\n        *ngTemplateOutlet="\r\n          colTemplate.templateRef;\r\n          context: {\r\n            $implicit: colData,\r\n            rowData: rowData,\r\n            colSetting: colSetting,\r\n            col: this,\r\n            triggerExpand: this.triggerExpand.bind(this,td, rowData)\r\n          }\r\n        "\r\n      ></ng-container>\r\n    </div>\r\n  </td>\r\n</ng-template>\r\n<ng-template\r\n  #_defaultColumnTemplate\r\n  let-colData=""\r\n  let-colSetting="colSetting"\r\n  let-rowData="rowData"\r\n>\r\n  <ng-container [ngSwitch]="colSetting.type">\r\n    \x3c!-- {{(colSetting.colSpanFunc && colSetting.colSpanFunc(rowData))}} --\x3e\r\n    \x3c!-- {{colSetting.colSpan}} --\x3e\r\n    <td class="{{ colSetting.css }}"\r\n    [attr.width]="colSetting.width"\r\n    [style.left.px]="colSetting.left"\r\n    [ngClass]="{\'pinned-column\': colSetting.pinned}"\r\n    [attr.colSpan] ="(colSetting.colSpanFunc && colSetting.colSpanFunc(rowData)) || colSetting.colSpan"\r\n    [attr.rowSpan] ="(colSetting.rowSpanFunc && colSetting.rowSpanFunc(rowData)) || colSetting.rowSpan" >\r\n      <div class="d-flex">\r\n        <div class="flex-fill {{ colSetting.align }}">\r\n          <i\r\n            class="expand-control flex-fill fa fa-plus"\r\n            *ngIf="(colSetting.triggerExpandFunc && colSetting.triggerExpandFunc(rowData)) || colSetting.triggerExpand && colSetting.triggerExpandIcon == \'plus-minus\'"\r\n          ></i\r\n          ><i\r\n            class="expand-control flex-fill mdi mdi-menu-down text-big"\r\n            *ngIf="(colSetting.triggerExpandFunc && colSetting.triggerExpandFunc(rowData)) || colSetting.triggerExpand && colSetting.triggerExpandIcon == \'arrow\'"\r\n          ></i>\r\n          <ng-template [ngSwitchCase]="\'datetime\'">\r\n            <div class="text-xs text-muted {{ colSetting.align }}">\r\n              {{ colData | date: colSetting.dateTimeFormat }}\r\n            </div>\r\n          </ng-template>\r\n          <ng-template [ngSwitchCase]="\'number\'">\r\n            <div class="{{ colSetting.align }}" [ngClass]="colSetting.css">\r\n              {{ colData | number }}\r\n            </div>\r\n          </ng-template>\r\n          <ng-template [ngSwitchCase]="\'numberFormat\'">\r\n            <div class="{{ colSetting.align }}" [ngClass]="colSetting.css">\r\n              {{ colData }}\r\n            </div>\r\n          </ng-template>\r\n          <ng-template ngSwitchDefault="ngSwitchDefault">\r\n            <div class="{{ colSetting.align }}" [ngClass]="colSetting.css">\r\n              {{ colData }}\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n    </td>\r\n  </ng-container>\r\n</ng-template>\r\n',styles:[".pinned-column{position:absolute;overflow:hidden}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={_columnTemplate:[{type:n.ViewChild,args:["_columnTemplate",{static:!0}]}],rowExpandTemplate:[{type:n.Input}],onTriggerExpand:[{type:n.Output}]},t}();var _=function(){function t(t){this._appRef=t,this.changeOrderState=new n.EventEmitter,this._viewRefs=[],this.sortOrder=T,this._unsubscribe$=new e.Subject}return t.prototype.ngOnInit=function(){this.registerEvent()},t.prototype.ngOnChanges=function(t){t.dataSource&&t.dataSource.currentValue&&this.clearExpandedRow(),t.settings&&t.settings.currentValue&&this.initPinnedColumnsSetting()},t.prototype.initPinnedColumnsSetting=function(){this.pinnedColumns=this.settings.columns.filter((function(t){return t.pinned})),this.normalColumns=this.settings.columns.filter((function(t){return!t.pinned})),this.pinnedColumnsWidth=this.pinnedColumns.reduce((function(t,n){return t+parseInt(n.width)}),0);var t=0;this.pinnedColumns.forEach((function(n,e){n.left=t,t+=parseInt(n.width)})),this.tableWidth="calc(100% - "+this.pinnedColumnsWidth+"px)",console.table(this.pinnedColumnsWidth)},t.prototype.clearExpandedRow=function(){var t=this;if(this.rowExpandTemplate&&this.tbodyElement&&this.tbodyElement.nativeElement){this._viewRefs&&this._viewRefs.forEach((function(n){return t._appRef.detachView(n)}));var n=this.tbodyElement.nativeElement.querySelectorAll("row-expanded");n&&n.forEach((function(n){return t.tbodyElement.nativeElement.removeChild(n)}))}},t.prototype.registerEvent=function(){var t=this;this.columnTriggerExpand$.pipe(o.takeUntil(this._unsubscribe$)).subscribe((function(n){var e=n.rowData,r=n.tRowEl;t.tableRowClickHandler(e,r,!0)}))},t.prototype.sort=function(t,n){n.currentTarget.classList.contains("sortable")&&(this.sortState.index=t,this.sortState.columnDef===this.settings.columns[t].columnDef?this.sortState.order=this.sortState.order===T.Asc?T.Desc:T.Asc:(this.sortState.columnDef=this.settings.columns[t].columnDef,this.sortState.order=this.sortOrder.Asc),this.changeOrderState.emit(this.sortState))},t.prototype.tableRowClickHandler=function(t,n,e){if(e||this.settings.rows.triggerExpand||this.settings.rows.triggerExpandFunc){var r=this.rowExpandTemplate.templateRef.createEmbeddedView({rowData:t});this._appRef.attachView(r),this._viewRefs.push(r);var o=r.rootNodes[0];"TR"!==o.tagName?console.error("Please use <tr> as root element for RowExpandTemplate"):(o.setAttribute("row-expanded",""),this.handleCollapseRow(n,o))}},t.prototype.handleCollapseRow=function(t,n){var e=this.settings.rows,r=e.triggerCloseExpanded,o=e.triggerCloseExpandedFunc;t.nextElementSibling&&t.nextElementSibling.attributes.getNamedItem("row-expanded")?(r||o)&&t.nextElementSibling.remove():t.insertAdjacentElement("afterend",n)},t.prototype.ngOnDestroy=function(){this._unsubscribe$.next(),this._unsubscribe$.complete()},t.decorators=[{type:n.Component,args:[{selector:"ng-table-content",template:'<div class="table-wrapper">\r\n  <div\r\n    class="table-responsive"\r\n    [style.width]="tableWidth"\r\n    [style.marginLeft.px]="pinnedColumnsWidth"\r\n  >\r\n    <table class="table">\r\n      <thead>\r\n        <tr>\r\n          <ng-container *ngFor="let column of pinnedColumns; let i = index">\r\n            <th\r\n              class="{{ column.align }} {{ column.css }} pinned-column"\r\n              [attr.width]="column.width"\r\n              [style.left.px]="column.left"\r\n              (click)="sort(i, $event)"\r\n              [ngClass]="{\r\n                sortable:\r\n                  column.sortable || (settings.sortable && column.sortable)\r\n              }"\r\n            >\r\n              <div class="flex">\r\n                <span class="flex-fill">{{ column.title }}</span>\r\n                <span\r\n                  *ngIf="sortState && sortState.index === i"\r\n                  class="sort-icon"\r\n                  >{{ sortState.order }}</span\r\n                >\r\n              </div>\r\n            </th>\r\n          </ng-container>\r\n          <ng-container *ngFor="let column of normalColumns; let i = index">\r\n            <th\r\n              class="{{ column.align }} {{ column.css }}"\r\n              [attr.width]="column.width"\r\n              (click)="sort(i, $event)"\r\n              [ngClass]="{\r\n                sortable:\r\n                  column.sortable || (settings.sortable && column.sortable)\r\n              }"\r\n            >\r\n              <div class="flex">\r\n                <span class="flex-fill">{{ column.title }}</span>\r\n                <span\r\n                  *ngIf="sortState && sortState.index === i"\r\n                  class="sort-icon"\r\n                  >{{ sortState.order }}</span\r\n                >\r\n              </div>\r\n            </th>\r\n          </ng-container>\r\n          <ng-container *ngIf="props.isHaveActionButtons">\r\n            <th>{{ settings.actionButtons.title || "Actions" }}</th>\r\n          </ng-container>\r\n        </tr>\r\n      </thead>\r\n      <tbody #tbodyEl>\r\n        <ng-container *ngIf="!dataSource && settings.showLoading && !isLoading">\r\n          <tr>\r\n            <td class={{settings.align}} [attr.colspan]="props.tableColSpan">\r\n              No data available\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n        <ng-container *ngIf="dataSource && dataSource.length > 0">\r\n          <ng-container *ngFor="let item of dataSource; let i = index">\r\n            <tr\r\n              (click)="tableRowClickHandler(item, tr, false)"\r\n              #tr\r\n              class="{{\r\n                settings.rows &&\r\n                  settings.rows.trCssFunc &&\r\n                  settings.rows.trCssFunc(item)\r\n              }}"\r\n            >\r\n              \x3c!-- column content --\x3e\r\n              <ng-container *ngFor="let col of settings.columns">\r\n                <ng-container\r\n                  *ngTemplateOutlet="\r\n                    tbColumn._columnTemplate;\r\n                    context: {\r\n                      $implicit: col.prop ? col.prop(item) : null,\r\n                      rowData: item,\r\n                      colSetting: col,\r\n                      colTemplate: colTemplates[col.columnDef]\r\n                    }\r\n                  "\r\n                >\r\n                </ng-container>\r\n              </ng-container>\r\n              \x3c!-- action buttons --\x3e\r\n              <ng-container *ngIf="props.isHaveActionButtons">\r\n                <ng-container\r\n                  *ngTemplateOutlet="\r\n                    tbActions.actionButtonTemplate;\r\n                    context: {\r\n                      $implicit: item,\r\n                      buttons: settings.actionButtons.buttons\r\n                    }\r\n                  "\r\n                >\r\n                </ng-container>\r\n              </ng-container>\r\n            </tr>\r\n            \x3c!-- row total --\x3e\r\n            <tr *ngIf="props.haveRowTotal">\r\n              <ng-container *ngTemplateOutlet="rowTotalTemplate.templateRef">\r\n              </ng-container>\r\n            </tr>\r\n          </ng-container>\r\n        </ng-container>\r\n      </tbody>\r\n\r\n      \x3c!-- table footer --\x3e\r\n    </table>\r\n  </div>\r\n</div>\r\n',styles:[".table-wrapper{position:relative;margin-bottom:10px}.table-wrapper .table-responsive{overflow-x:auto;width:100%;display:block;white-space:nowrap;border-collapse:collapse}.table-wrapper .table-responsive .table{border:none;border-spacing:0}.table-wrapper .table-responsive .table td{background:red}.table-wrapper .table-responsive .table th{color:rgba(0,0,0,.85);font-weight:500;text-align:left;background:#fafafa;border-bottom:1px solid #f0f0f0;transition:background .3s;position:relative;padding:16px;overflow-wrap:break-word}"]}]}],t.ctorParameters=function(){return[{type:n.ApplicationRef}]},t.propDecorators={rowTotalTemplate:[{type:n.Input}],rowExpandTemplate:[{type:n.Input}],settings:[{type:n.Input}],sortState:[{type:n.Input}],props:[{type:n.Input}],dataSource:[{type:n.Input}],tbColumn:[{type:n.Input}],tbActions:[{type:n.Input}],colTemplates:[{type:n.Input}],isLoading:[{type:n.Input}],columnTriggerExpand$:[{type:n.Input}],changeOrderState:[{type:n.Output}],tbodyElement:[{type:n.ViewChild,args:["tbodyEl",{static:!0}]}]},t}();var P=function(){function t(){this.pagingOptions=new S,this.change=new n.EventEmitter}return t.prototype.ngOnInit=function(){this.totalPage=Math.ceil(this.totalCount/this.pagingOptions.pageSize)+1},t.prototype.ngOnChange=function(){this.totalPage=Math.ceil(this.totalCount/this.pagingOptions.pageSize)+1},t.prototype.onPreviousClick=function(){1!==this.pagingOptions.pageNumber&&(this.pagingOptions.pageNumber-=1,this.change.emit(this.pagingOptions))},t.prototype.onNextClick=function(){this.pagingOptions.pageNumber+=1,this.change.emit(this.pagingOptions)},t.prototype.handlePageChange=function(t){this.pagingOptions.pageNumber=t.target.value,this.pagingOptions.pageIndex=t.target.value-1,this.change.emit(this.pagingOptions)},t.prototype.handlePageSizeChange=function(t){this.pagingOptions.pageSize=t.target.value,this.change.emit(this.pagingOptions)},t.decorators=[{type:n.Component,args:[{selector:"ng-table-navigation",template:'<div class="container">\r\n    <span>Show</span>\r\n    <select (change)="handlePageSizeChange($event)" name="pageSize">\r\n        <option value="5">5 rows</option>\r\n        <option value="10">10 rows</option>\r\n        <option value="20">20 rows</option>\r\n        <option value="50">50 rows</option>\r\n        <option value="100">100 rows</option>\r\n    </select>\r\n    <button (click)="onPreviousClick()">Previous</button>\r\n    <input type="number" [(ngModel)]="pagingOptions.pageNumber" (change)="handlePageChange($event)" />\r\n    <span>of {{totalPage}}</span>\r\n    <button (click)="onNextClick()">Next</button>\r\n</div>',styles:[":host{float:right}:host .container>*{margin-left:8px}:host select{height:22px;min-width:44px}:host input{height:15px;width:50px}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={totalCount:[{type:n.Input}],change:[{type:n.Output}]},t}();var k=function(){function t(){}return t.decorators=[{type:n.NgModule,args:[{declarations:[O,D,I,R,m,h,c,f,d,g,u,_,P],imports:[a.BrowserModule,i.RouterModule,r.HttpClientModule,s.FormsModule],exports:[O,m,h,c,f,d,g,u]}]}],t}();t.ActionButtonSetting=y,t.ButtonSetting=v,t.ColumnSetting=w,t.NgTableComponent=O,t.NgTableModule=k,t.NgTableService=p,t.PagingSetting=S,t.RowSetting=x,t.TableProps=C,t.TableSetting=b,t.ɵa=c,t.ɵb=g,t.ɵc=u,t.ɵd=d,t.ɵe=h,t.ɵf=m,t.ɵg=f,t.ɵh=D,t.ɵi=I,t.ɵj=R,t.ɵk=_,t.ɵl=P,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=ng-table.umd.min.js.map