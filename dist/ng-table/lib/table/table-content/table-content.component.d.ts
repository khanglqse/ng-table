import { OnInit, EventEmitter, ApplicationRef, ElementRef, OnDestroy, OnChanges, SimpleChanges, ViewRef } from '@angular/core';
import { TableSetting, TableProps, ColumnSetting } from '../../models/settings.model';
import { SortState, SortOrder } from '../../models/sort-order.model';
import { TableColumnComponent } from '../column/table-column.component';
import { ActionButtonComponent } from '../action-button/action-button.component';
import { TableRowTotalTemplate, TableRowExpandTemplate } from '../../directive/table-directive.directive';
import { Subject } from 'rxjs';
export declare class TableContentComponent implements OnInit, OnChanges, OnDestroy {
    private _appRef;
    rowTotalTemplate: TableRowTotalTemplate;
    rowExpandTemplate: TableRowExpandTemplate;
    settings: TableSetting<any>;
    sortState: SortState;
    props: TableProps;
    dataSource: any[];
    tbColumn: TableColumnComponent;
    tbActions: ActionButtonComponent;
    colTemplates: any;
    isLoading: boolean;
    columnTriggerExpand$: Subject<{
        rowData: any;
        tRowEl: any;
    }>;
    changeOrderState: EventEmitter<SortState>;
    tbodyElement: ElementRef<HTMLElement>;
    _viewRefs: ViewRef[];
    sortOrder: typeof SortOrder;
    private _unsubscribe$;
    pinnedColumns: any[];
    tableWidth: string;
    normalColumns: ColumnSetting<any>[];
    pinnedColumnsWidth: any;
    constructor(_appRef: ApplicationRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    initPinnedColumnsSetting(): void;
    clearExpandedRow(): void;
    registerEvent(): void;
    sort(colIndex: number, e: Event): void;
    tableRowClickHandler(rowData: any, rowEl: HTMLElement, ignoreSettings: boolean): void;
    handleCollapseRow(tRow: HTMLElement, templateEl: HTMLElement): void;
    ngOnDestroy(): void;
}
